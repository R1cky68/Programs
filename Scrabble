#include <ctype.h>
#include <cs50.h>
#include <stdio.h>
#include <string.h>

// Points assigned to each letter of the alphabet
int POINTS[] = {1, 3, 3, 2, 1, 4, 2, 4, 1, 8, 5, 1, 3, 1, 1, 3, 10, 1, 1, 1, 1, 4, 4, 8, 4, 10};

int compute_score(string word);

int main(void)
{
    // Get input words from both players
    string word1 = get_string("Player 1: ");
    string word2 = get_string("Player 2: ");

    // Score both words
    int score1 = compute_score(word1);
    int score2 = compute_score(word2);

    // TODO: Print the winner
    if (POINTS[score1] < POINTS[score2])
    {
        printf("Player 1 Wins! \n");
    }

    else if (POINTS[score1] > POINTS[score2])
    {
        printf("Player 2 Wins! \n");
    }

    else
    {
     printf("Tie! \n");
    }

}

int compute_score(string word)
{
    // TODO: Compute and return score for string
    // Want to assess the score for each letter given for the word, cycling through each character and assigning a point

    // First making variables to keep track of where we are in the word
    int score = 0;
    int length = strlen(word);

    // Giving points to both uppercase and lowercase letters, none to punctuation (ignore it)
    for (int i = 0; i < length; i++)
    {
        if (isupper(word[i]))
        {
            score += POINTS[word[i] - 65];
        }

        // Using the ASCII values for A and a, subtracting them gives index in POINTS[] array, starting from 0 (ie POINTS[0] = A) which updates score

       else if (islower(word[i]))
       {
            score += POINTS[word[i] - 97];
       }

    }

        // Returning score so program can run calculations with it
        return score;


}
